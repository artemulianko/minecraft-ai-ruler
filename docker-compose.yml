services:
#  mc:
#    build:
#      dockerfile: .docker/Dockerfile
#      context: forge
#    tty: true
#    stdin_open: true
#    ports:
#      - "25565:25565"
#    environment:
#      OPENAI_API_KEY: $OPENAI_API_KEY
#      TYPE: "FORGE"
#      EULA: "TRUE"
#      ONLINE_MODE: "false"
#      GAMEMODE: "creative"
#    volumes:
#      - ./.data:/data

  kafka:
    container_name: kafka
    image: apache/kafka:latest
    ports:
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3


  kafka-ui:
    container_name: kafka-ui
    image: ghcr.io/kafbat/kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'

  topic-initializer:
    image: oven/bun
    depends_on:
      - kafka
    command: 'bun run src/index.ts'
    working_dir: /app
    volumes:
      - ./kafka:/app

  moderator:
    image: oven/bun
    depends_on:
      - topic-initializer
      - kafka
    command: 'bun start:moderator'
    working_dir: /app
    volumes:
      - ./agents:/app